#!/usr/bin/env python
# coding: utf-8

# # Proposition 

# We know that $\delta_2 = 0$ in general gives that 
# $$P_3 = (s_{14} s_{15} s_{22} - s_{12}^2 s_{45}) P_1 + s_{12} (s_{11} s_{45} - s_{14} s_{15}) P_2$$
# hence, for some values of $s_{ij}$, the point $P_3$ is not defined.
# Here we want to see when this happens.
# The conclusion is that $P_3$ is always uniquely defined, unless:
# 1) the points of the $V$-configuration are such that $s_{12}=0$, $s_{14}=0$
#    (or $s_{13}=0$, $s_{15}=0$, or...). In this case the unique cubic is a 
#    cubic in which the eigenpoints are in configuration (5).
# 2) the points of the $V$-configuration satisfy the condition 
#    $s_{12} = 0$, $s_{23} = 0$. In this case, the line $P_1 \vee P_2$ of the $V$-configuration
#    is tangent in $P_2$ to the isotropic conic, so the matrix $\Phi(P_1, P_2, P_3)$ has 
#    rank $5$ and $P_5$ can be chosen in a free way on the line $P_1 \vee P_4$ and the 
#    matrix $\Phi(P_1, P_2, P_3, P_4, P_5)$ has rank $9$, (unless $P_1 \vee P_4$ is tangent
#    to the isotropic conic...)
# 3) The points satisfy the conditions $\sigma(P_1, P_2) = 0$ and 
#    $\sigma(P_1, P_4) = 0$. In this case the $V$-configuration is given 
#    by a point $P_1$ not on the isotropic conic and the other points on the two tangents 
#    to the isotropic conic through $P_1$. If no points of the $V$-configurations are on 
#    the isotropic conic, the two tangent lines are lines of eigenpoints, if (say)
#    $P_2$ and $P_4$ are on the isotropic conic, the matrix $\Phi(P_1, P_2, P_3, P_4)$ has rank $8$.

# In[41]:


load("basic_functions.sage")


# We define three points $P_1$, $P_2$, and $P_4$.

# In[42]:


P1 = vector(S, (A1, B1, C1))
P2 = vector(S, (A2, B2, C2))
P4 = vector(S, (A4, B4, C4))


# We write $\delta_2$ in terms of the quantities $s_{ij}$

# In[43]:


d2s = s12*s13*s45 - s14*s15*s23  


# In general, we have that 5 points in a V-configuration are eigenpoints iff 
# $$P_3 = (s_{14} s_{15} s_{22} - s_{12}^2 s_{45}) P_1 + s_{12} (s_{11} s_{45} - s_{14} s_{15}) P_2$$ 
# unless the two coefficients of $P_1$ and $P_2$ are $0$.
# Here we study this particular case.

# In[44]:


Js = S.ideal(s14*s15*s22-s12^2*s45, s11*s12*s45-s12*s14*s15, d2s)


# We compute the primary decomposition of the radical of the ideal $J_s$:

# In[45]:


pd = Js.radical().primary_decomposition()


# We get $6$ ideals:

# In[46]:


assert(len(pd)==6)


# ## The ideal $(s_{12}, s_{14})$

# The first ideal is generated by $s_{14}$ and $s_{12}$:

# In[47]:


assert(S.ideal(s12, s14) in pd)


# If $P_1$, $P_2$, and $P_4$ are such that $s_{12} = 0$, $s_{14} = 0$, then, as vectors, $P_1$ is the cross product of $P_2$ and $P_4$.

# In[48]:


P1 = wedge_product(P2, P4)


# In[49]:


assert(scalar_product(P1, P2) == 0)
assert(scalar_product(P1, P4) == 0)


# We construct $P_3$ and $P_5$ so that the $5$ points are in a $V$-configuration

# In[50]:


P3 = u1*P1+u2*P2
P5 = v1*P1+v2*P4


# With this choice, we have $\delta_2(P_1, P_2, P_3, P_4, P_5) = 0$

# In[51]:


assert(delta2(P1, P2, P3, P4, P5) == 0)


# We see therefore that we can define $P_3$ and $P_5$ in an arbitrary way:
# for any choice $\delta_2$ is zero.

# From here the computations are exactly the computations in the file 
# config5.sage (up to a permutation of the points) and we see that in 
# this case the eigenpoints of the cubic are in configuration (5).

# CONCLUSION:
# If $s_{12} = s_{14} = 0$, then the $V$-configuration has $\delta_2$ = 0 and $P_3$ and $P_5$ 
# can be freely chosen on the line $P_1 \vee P_2$ and $P_1 \vee P_4$, respectively.

# ## The ideal $(s_{12}, s_{22}, s_{23})$

# In[62]:


assert(S.ideal(s12, s22, s23) in pd)


# An easy computation shows that if $s_{22} = 0$ and $s_{12} = 0$, then $s_{23} = 0$, 
# (or if $s_{12} = 0$ and $s_{23} = $0, then $s_{22} = 0$),
# so the ideal $(s_{12}, s_{22}, s_{23})$ is generated by $s_{12}$ and $s_{22}$.
# 
# In particular, the line $P_1 \vee P_2$ is tangent to the isotropic conic in $P_2$, 
# hence the matrix $\Phi(P_1, P_2, P_3)$ has rank $5$.
# 
# Therefore, for all $P_3$ and $P_5$ the rank 
# of the matrix $\Phi(P_1, P_2, P_3, P_4, P_5)$ is $\leq 9$, thus we have a 
# $V$-configuration which satisfies $\delta_2(P_1, P_2, P_3, P_4, P_5) = 0$
# for any choice of the points $P_3$ and $P_5$.

# CONCLUSION FOR THE CASE $s12$, $s22$:
# the $V$-configuration is of eigenpoints, for every choice of $P_3$ and $P_5$
# (if also $P_1 \vee P_4$ is tangent to the isotropic conic, the two tangent lines are 
# lines of eigenpoints, as claimed in the section on eigenpoints 
# of positive dimension).

# Here is an example: 
# it shows that in case $s_{12} = s_{22} = 0$ we have 7 eigenpoints
# with (apparently) no particular specific properties.

# In[63]:


Q1, Q2 = vector(S, (0, 0, 1)), vector(S, (1, ii, 0))
Q3 = vector(S, (1, -ii, 0))
rt1 = matrix([Q1, Q2, (x, y, z)]).det()
rt2 = matrix([Q1, Q3, (x, y, z)]).det()

p1 = 1*Q1
p2 = 1*Q2
p3 = 2*p1+5*p2
p4 = vector(S, (3, 1, 5))
p5 = p1+3*p4
assert(condition_matrix([p1, p2, p3, p4, p5], S, standard="all").rank() == 9)
cb = cubic_from_matrix(condition_matrix([p1, p2, p3, p4, p5], S, standard="all"))
assert(cb.is_prime())


# ## The ideal $(s_{15}, s_{12})$

# In[59]:


assert(S.ideal(s15, s12) in pd)


# This case is analog to the case $(s_{12}, s_{14})$ by swapping $4$ and $5$

# ## The ideal $(s_{45}, s_{14})$

# In[60]:


assert(S.ideal(s45, s14) in pd)


# In this case we have $s_{44} = 0$, indeed
# $$ \left\langle P_4, v_1 P_1 + v_2 P_4 \right\rangle = 0 $$
# $$ v_1 \left\langle P_1, P_4 \right\rangle + v_2 \left\langle P_4, P_4 \right\rangle = 0 $$
# $$ 0 + v_2 \left\langle P_4, P_4 \right\rangle = 0 $$
# $$ \left\langle P_4, P_4 \right\rangle = 0 $$
# because $v_2 \neq 0$.

# CONCLUSION: THIS CASE IS THE SAME AS THE CASE $(s_{12}, s_{22}, s_{23})$

# ## The ideal $(s_{45}, s_{15})$

# In[ ]:


assert(S.ideal(s45, s15) in pd)


# In this case we have $s_{55} = 0$ as in $(s_{45}, s_{14})$

# CONCLUSION: THIS CASE IS THE SAME AS THE CASE $(s_{12}, s_{22}, s_{23})$

# ## The ideal $(s_{13}s_{22} - s_{12}s_{23}, s_{14}s_{15} - s_{11}s_{45}, s_{12}s_{13} - s_{11}s_{23}, s_{12}^2 - s_{11}s_{22})$

# In[64]:


assert(S.ideal(
    [
        s13*s22 - s12*s23, 
        s14*s15 - s11*s45,
        s12*s13 - s11*s23, 
        s12^2 - s11*s22
    ]
) in pd)


# In this case we determine the ideal in the variables $A_1, \dotsc, C_4$,
# but first we have to re-define the points.

# In[65]:


P1 = vector(S, (A1, B1, C1))
P2 = vector(S, (A2, B2, C2))
P4 = vector(S, (A4, B4, C4))
P3 = u1*P1+u2*P2
P5 = v1*P1+v2*P4


# In[66]:


I = S.ideal(
    [
        s13*s22 - s12*s23, 
        s14*s15 - s11*s45,
        s12*s13 - s11*s23, 
        s12^2 - s11*s22
    ]
)
J = I.subs(
    {
        s11: scalar_product(P1, P1),
        s22: scalar_product(P2, P2),
        s13: scalar_product(P1, P3),
        s12: scalar_product(P1, P2),
        s23: scalar_product(P2, P3),
        s14: scalar_product(P1, P4),
        s15: scalar_product(P1, P5),
        s45: scalar_product(P4, P5)
    }
) 


# We saturate $J$ w.r.t. the condition that $v_2 \neq 0$ and 
# w.r.t. the condition that $P_1$, $P_2$, and $P_4$ are not aligned.

# In[68]:


J = J.saturation(v2)[0]
J = J.saturation(matrix([P1, P2, P4]).det())[0]


# We study the ideal $J$

# $J$ contains the two polynomials $\sigma(P_1, P_2)$ and $\sigma(P_1, P_4)$:

# In[69]:


assert(sigma(P1, P2) in J)
assert(sigma(P1, P4) in J)


# Moreover, $J$ and the ideal $\bigl(\sigma(P_1, P_2), \sigma(P_1, P_4)\bigr)$
# coincide if $P_1$, $P_2$, and $P_4$ are not aligned:

# In[70]:


I = S.ideal(sigma(P1, P2), sigma(P1, P4)).saturation(matrix([P1, P2, P4]).det())[0]
assert(J == I)


# Hence, in this case the $V$-configuration is obtained by a point $P_1$ and the two tangents to 
# the isotropic conic passing through $P_1$. 
# 
# In general, the $V$-configuration is such that the two lines are lines of eigenpoints and the cubic splits 
# into the conic $(x^2 + y^2 + 2/3*z^2)$ and a line.
# This case is discussed in the section on eigenpoints of positive dimension.

# Here is an example:
# example of $P_1 \vee P_2$ tangent to the isotropic conic in $P_2$:

# In[73]:


Q1, Q2, Q3 = vector(S, (0, 0, 1)), vector(S, (1, ii, 0)), vector(S, (1, -ii, 0))
rt1 = matrix([Q1, Q2, (x, y, z)]).det()
rt2 = matrix([Q1, Q3, (x, y, z)]).det()

p1 = 1*Q1
p2 = Q1+3*Q2
p3 = 2*Q1+5*Q2
p4 = Q1+7*Q3
p5 = Q1-2*Q3

M = condition_matrix([p1, p2, p3, p4, p5], S, standard="all")
assert(M.rank() == 9)
cb = cubic_from_matrix(M)
assert(cb == z*(x^2 + y^2 + 2/3*z^2))


# In the particular case in which $P_2$ and $P_4$ are on the isotropic conic,
# the matrix $\Phi(P_1, P_2, P_3, P_4, P_5)$ has rank $8$ and 
# a generic cubic of the corresponding pencil of cubics is smooth
# and has $7$ eigenpoints. 
# The case is studied in the section on $V$-configurations of rank $8$.

# Here is an example:

# In[75]:


Q1, Q2, Q3 = vector(S, (0, 0, 1)), vector(S, (1, ii, 0)), vector(S, (1, -ii, 0))
rt1 = matrix([Q1, Q2, (x, y, z)]).det()
rt2 = matrix([Q1, Q3, (x, y, z)]).det()

p1 = 1*Q1
p2 = 1*Q2
p3 = 2*Q1+5*Q2
p4 = 1*Q3
p5 = Q1-2*Q3

M = condition_matrix([p1, p2, p3, p4, p5], S, standard="all")
assert(M.rank() == 8)
M1 = M.matrix_from_rows([1, 2, 3, 4, 7, 9, 10, 13])
assert(M1.rank() == 8)
M2 = M1.stack(vector(S, (1, 3, 6, -4, 0, 3, 2, 1, -5, 7)))
M2 = M2.stack(vector(S, mon))
cb = M2.det()

