print("We define a ring with sufficiently many variables.")

varAn1 = ["s"+str(i)+str(j) for i in range(1,8) for j in range(i, 8)]
varAn2 = ["x", "y", "z", "u1", "u2", "v1", "v2", "w1", "w2", "l1", "l2"]
varAn3 = ["a"+str(i) for i in range(10)]
varAn4 = [str(XX)+str(i) for i in range(1, 8) for XX in ["A", "B", "C"]]
K = QQ
S = PolynomialRing(K, varAn1+varAn2+varAn3+varAn4)
S.inject_variables(verbose=false)
P = vector(S, (x, y, z))


load("auxiliaryProcedures.sage")

print("We define 'mon' and 'Jrel'")
mon = [x^3, x^2*y, x*y^2, y^3, x^2*z, x*y*z, y^2*z, x*z^2, y*z^2, z^3]
Jrel = S.ideal(s11-scalarProd(P1, P1), \
               s12-scalarProd(P1, P2), \
               s22-scalarProd(P2, P2), \
               s14-scalarProd(P1, P4), \
               s24-scalarProd(P2, P4), \
               s44-scalarProd(P4, P4), \
               s15-scalarProd(P1, P5), \
               s25-scalarProd(P2, P5), \
               s45-scalarProd(P4, P5), \
               s55-scalarProd(P5, P5))

### we redefine the point for this situation.
print("""Is the configuration (4) possible?
We define the points P1, P2, P4 generic and P3 alligned with P1 and P2, 
P5, alligned with P1 and P4,
P6 alligned with P2 and P4""")
P1, P2, P4  = vector((A1, B1, C1)), vector((A2, B2, C2)), vector((A4, B4, C4))
P3 = u1*P1 + u2*P2
P5 = v1*P1 + v2*P4
P6 = w1*P2 + w2*P4


print("""If configuration (4) is possible, then we must have:
delta1(P1, P2, P4)=0, 
delta1(P4, P1, P2)=0, 
delta1(P2, P1, P4)=0
We define therefore the ideal generated by these polynomials
and we saturate it with the ideals (A1, B1, C1), (A2, B2, C2) (A4, B4, C4)
i.e. we require that P1 and P2 and P4 exist as projective points and 
we saturate w.r.t. the ideal det(matrix([P1, P2, P4]))""")

L1 = [delta1(P1, P2, P4), delta1(P4, P1, P2), delta1(P2, P1, P4)]
J1 = S.ideal(L1).saturation(S.ideal(A1, B1, C1))[0]
J1 = J1.saturation(S.ideal(A2, B2, C2))[0]
J1 = J1.saturation(S.ideal(A4, B4, C4))[0]
J1 = J1.saturation(S.ideal(matrix([P1, P2, P4]).det()))[0]

print("""\nWe obtain the following ideal:\n""")
print(J1)

print("""\nIt is immediate to see that J1 is the ideal generated by 
s12, s14, s24\n""")

print(J1 == S.ideal(scalarProd(P1, P2), scalarProd(P1, P4), scalarProd(P2, P4)))
print("")

print("""Hence if the points satisfy J1, we have:
delta2(P1, P3, P2, P5, P4) = 0
delta2(P2, P3, P1, P6, P4) = 0
delta2(P4, P5, P1, P6, P2) = 0
""")

print(J1.reduce(delta2(P1, P3, P2, P5, P4)) == 0)
print(J1.reduce(delta2(P2, P3, P1, P6, P4)) == 0)
print(J1.reduce(delta2(P4, P5, P1, P6, P2)) == 0)

print("""\nConclusion: condition (4) implies condition(8)""") 
